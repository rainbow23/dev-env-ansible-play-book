---
# tasks file for ./roles/packages
- name: main / Add the OS specific varibles
  include_vars: "{{ ansible_os_family }}.yml"

- name: main / Update apt packages
  apt:
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: main / Install the yum packages
  yum:
    name: "{{ item.value }}"
    state: present
  with_dict: "{{ required_packages }}"
  when: ansible_os_family == 'RedHat'

- name: main / Install packages from github
  git:
    repo: "{{ item.value.path }}"
    dest: "{{ home_path }}/{{ item.value.dir }}"
    force: yes
    update: yes
  become_user: "{{ ansible_user }}"
  with_dict: "{{ packages_from_github }}"
  # notify:
    # - Compile Vim
    # - Delete cloned directories

- name: Permission change to directories
  file:
    path: "{{ home_path }}/{{ item.value.dir }}"
    owner: "{{ ansible_user }}"
    group: wheel
    mode: 0755
    recurse: true
    state: directory
  with_dict: "{{ packages_from_github }}"

- name:  Copy init.sh
  copy:
    src: set.sh
    dest: "{{ home_path }}/.set.sh"
    owner: "{{ ansible_user }}"
    group:  wheel
    mode: 0755

- name: add shell script to .bashrc and .zshrc
  shell: |
    cat $HOME/.set.sh >> {{ item }}
    exec $SHELL -l
  with_items:
    - ~/.bashrc
    - ~/.zshrc
  args:
    executable: /bin/bash
  become_user: "{{ ansible_user }}"


- name: Install autojump
  shell: "cd {{ home_path }}/autojump && ./install.py"
  args:
    executable: /bin/bash
  become_user: "{{ ansible_user }}"

- name: Install anyenv
  shell: |
    anyenv install {{ item.value.env }}
    exec $SHELL -l
  args:
    executable: /bin/bash
  become_user: "{{ ansible_user }}"
  # when: '"{{ item }}_path.stat.exists ==  False"'
  with_dict: "{{ anyenv }}"

- name: Install go, python and activate
  shell: |
    {{ item.value.env }} install {{ item.value.ver }}
    {{ item.value.env }} global {{ item.value.ver }}
    {{ item.value.env }} rehash
    exec $SHELL -l
  with_dict: "{{ anyenv }}"
  args:
    executable: /bin/bash
  become_user: "{{ ansible_user }}"

- name: Install fzf
  shell: |
    cd $HOME/.fzf
    ./install
    exec $SHELL -l
  become_user: "{{ ansible_user }}"
